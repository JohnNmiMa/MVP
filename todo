Create wireframe of code snippet app - DONE

Implement basic UX flow w/ bootstrap
  - Implement for desktop and tablet - not iPhone - DONE
  - Create header (Title, search bar, Sign-In, Gear) - DONE

Implement user signup/login and account persistence
  - Hookup Sign-In button to Sign-In page - DONE
  - Implement OAuth for google (twitter & facebook later) - DONE
    - Hookup the Google button to do google oauth - DONE
  - Create user session according to email address - DONE
  - Persist user data (Name, email, ???) - DONE
    - CouchDB, MongoDB, Reddis
    - Create/persist default "General" topic for each user - DONE
  - Implement "Sign Out" button - DONE

Implement snippet page format - DONE
  - Wide page only - DONE
  - Implement Horz and Vert Layout - DONE
    - Create some dummy snippets to use for layout - DONE
    - Implement Horz and Vert buttons - DONE
    - Create JavaScript to toggle CSS for each snippet - DONE

Add "Snippets"
  - Hook up plus button to snippet form page - DONE
  - ship code snippet to server (per user) - DONE
    - can't create snippets if not signed in - DONE
    - persist the snippet in the topic - DONE
  l Add jQuery-ACE for code snippets
  l Add text editor for code descriptions

Add "Topic" widget (left column) - DONE
  - Add "General" topic - DONE
  - Be able to get list of topics from server - DONE
    - display list in the topic panel - DONE
  - Clicking of topic title
    - When a snippet is clicked, a topic title to page - DONE
    - Create python script to add sample snippets to db - for test use - DONE
    - Don't show any snippets upon login - DONE
    - Snow snippets when topic title is clicked - DONE
      - Add a timestamp to snippets - DONE
      - Bring back list of snippets sorted according to time - DONE
  l Add "All" topic
  - Show snippet count in topic panel for each topic - DONE
  - Highlight selected topic - DONE

Create "Topics"
  - Add "Plus Button" to create topic - DONE
    - Add the topicForm - DONE
    - Persist the topic - DONE
      - if topic already exists - tell user to pick a new topic name - DONE
    - Update the UI with the new topic - DONE

Delete "Topics"
  - Figure out UI - DONE
    - prompt user to delete topic
  - Send request to remove the topic id resource - DONE
    - In server, move all snippets in the topic to the General topic - DONE
    - In server, delete the topic. - DONE

Delete "Snippets"
  - Add UI to delete a snippet - DONE
    - Redesign the snippet html/css - DONE
    - Add the new design - DONE
    - Add the snippet id to the snippet - DONE
    - Add hover effect for snippet selector - DONE
    - Add "Snip it", "Delete", and "Edit" to hover div - DONE
  - Update db in server - DONE
  - Update UI to by removing the snippet from the DOM - DONE

Topic and snippet delete confirmation dialogs - DONE
  - Use Bootstrap Modal Dialogs - DONE

Snippet search capabilities
  - Add user snippet counter to search box upon login - DONE
    - Add personal-snippets / public-snippets - DONE
      - /snippets/personal/?... - DONE
      - /snippets/public/?... - DONE
  - Send search query to server (/snippets/search/<public> or <personal> - DONE
  - Create db query, and get results for public search - DONE
  - Create db query, and get results for personal search - DONE
  - Return results in JSON - DONE
  - In JavaScript, take JSON, unpack it, and for each snippet, add to page - DONE
    - Remove topic name in snippet bar - DONE
    - Add words '"the search str" search' in snippet bar - DONE

Edit "Topics"
  - Figure out UI
  - if topic is renamed, update name in database
    - when clicking on name, replace with input field and add topic name
    - upon return, grab new topic name
    - send a PUT with new name and topic id to server
    - in server, create PUT endpoint /topics/id with new name
    - persist name in db and return success to client
    - in client, remove input field, and replace with new topic name

Edit "Snippets"
  - Add revised snippetForm
    - add public/private icon (eye)
    - add topic selector
    - add language selector for jQuery ACE
    - add cancel button

Change snippet public or private state in Snippet Selector popup
  - If snippet is owned by logged in user, toggle public or private

Add ability to change individual snippet layout
  - Add col and row icons to Snippet Selector layout when in Title Only mode
  - Add title only icon to Snippet Selector layout when NOT in Title Only mode
  - Add showSnippetHorizontal = function($snippet) {...}
  - Add showSnippetVertical = function($snippet) {...}
  - Add showSnippetTitleOnly = function($snippet) {...}

Implement jQuery ACE for code
  - 

Implement text editor for description
  - 

Implement Gear
  - Add "Setting" model in server
  - Save away last_used_topic in settings upon logout.
    - When the user logs in, display the last_used topic.
  - Create Settings UI
  - Set default for snippet creation to public or private
  - Set user snippet color
  - Set public snippet color

Change DB to something that persists on Heroku (Postgres)

Push to Heroku

Associate snippet with a topic or multiple topics (MAYBE)
  - Update database to support a many-to-many relationship
  - Provide ability to move to topic
    - Figure out UI
    - Update db to remove old topic link and associate snippet to new topic link
  - Provide ability to add to topic
    - Figure out UI
    - Update db to associate snippet to new topic link
      - show that the snippt belongs in multiple topics

When deleting topics, query if all snippets should get deleted, or pushed to the General topic

Sort snippets in a topic (Don't sort under General topic)
  - Sort by time, alphabetically, or custom
  - Custom sort will require each snippet to be draggable with drag bars
    - Add the pencil icon to do custom order when in custom sort mode

Add "All" topic to show all topics. This will be useful with the language filter

Implement Language Filter

Add email or ability to forward to another user's inbox
  - add Inbox, so that other users can forward snippets

iPhone layout:
* Remove topic and snippet create
* Show only row and title only layout

Desktop Layout Improvements:
1) Make topic panel horizontally resizable
2) Make topic panel span full height of page
3) Make snippet description flow around code when in columnar layout
4) Keep Topic Panel & Snippet Bar from scrolling off top of page
   - maybe make snippet panel scrollable
5) Make a snippet dragabble to topic
6) Make better private vs public (eye) icons

Add incremental updates for many snippets

Future:
1) Persist to local storage for offline support
2) Figure out how to support other modules:
   Notes, Todos, Projects, Books, Pomodoro, Scrum-like Backlog etc)
   - Be able to support in left panel
   - Be able to load modules
3) Create native iPhone app
4) How to add features for payment
5) Add stats page:
   - show most used language (use overall, last year, last month, etc)
   - snippets created over time
   - public vs private snippets
   - total users, topics, snippets
6) Share topics
7) Add multiple snippet blocks per snippet

--------
Bugs:
* Title length can be created bigger than desired.
* Title field does not wrap.
* Topic count is not incremented when a new snippet is added - DONE
* When new topic is added, put it in the list below the 'General' topic - DONE
* When switching topics, snippets are not displayed in the currently selected snippet layout - DONE
* When logging in, don't default to showing no topic. If first time, show the General topic

--------
Persistance Schema
* User data: User, email, ??? (One "User" to many "Topics")
  - there should be no "User" to "Snippet" relationship
* Snippet data: Topic, Title, Description, Code, snippetID, topicID (One "Snippet" to many "Topics")
* Topic list: Topic, User, topicID (One "Topic" to many "Snippets"
* Refresh main snippet page where no snippets are displayed, then
  Select a layout,
  then click a topic to get snippets on the page. They are not in the layout.


To search all user's snippets:
  - for each topic:
    - for each snippet in topic:
      - search snippet for string

To search all snippets:
  - for each user:
      - for each topic:
        - for each snippet in topic:
          - search snippet for string

To find a particular snippet:
  - given user:
    - for each topic:
      - for each snippet"
        return when given snippet found

